apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ .Values.global.prefix }}-ui
  namespace: {{ .Values.global.namespace }}
spec:
  selector:
    matchLabels:
      home-idp-component: home-idp-ui
  replicas: {{ .Values.ui.replicas }}
  template:
    metadata:
      labels:
        home-idp-component: home-idp-ui
    spec:
      containers:
      - name: home-idp-ui
        image: "achoistic98/home-idp-ui:{{ .Values.ui.image.tag }}"
        imagePullPolicy: Always
        # env:
        #   - name: REACT_APP_BACKEND_HOST
        #     value: {{ .Values.ingress.gateway.host }}
        #   - name: REACT_APP_BACKEND_SCHEMA
        #     {{ if .Values.ingress.gateway.tls }}
        #     value: https
        #     {{ else }}
        #     value: http
        #     {{ end }}
        #   - name: REACT_APP_BACKEND_PORT
        #     value: {{ .Values.ingress.gateway.port | quote }}
        # args: ["$(REACT_APP_BACKEND_HOST)", "$(REACT_APP_BACKEND_PORT)", "$(REACT_APP_BACKEND_SCHEMA)"]
        ports:
        - containerPort: 3000
          name: port
        volumeMounts:
        - name: home-idp-cm-volume
          mountPath: /etc/home-idp
      volumes:
        - name: home-idp-cm-volume
          configMap:
            name: home-idp-cm
      serviceAccountName: home-idp-ui
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: "{{ .Values.global.prefix }}-deploy-manager"
  namespace: {{ .Values.global.namespace }}
spec:
  selector:
    matchLabels:
      home-idp-component: home-idp-deploy-manager
  replicas: {{ .Values.deployManager.replicas }}
  template:
    metadata:
      labels:
        home-idp-component: home-idp-deploy-manager
    spec:
      containers:
      - name: home-idp-deploy-manager
        image: "achoistic98/home-idp-deploy-manager:{{ .Values.deployManager.image.tag }}"
        imagePullPolicy: Always
        ports:
        - containerPort: 5104
          name: port
        volumeMounts:
        - name: home-idp-cm-volume
          mountPath: /etc/home-idp
      volumes:
        - name: home-idp-cm-volume
          configMap:
            name: home-idp-cm
      serviceAccountName: home-idp-deploy-manager
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: "{{ .Values.global.prefix }}-install-manager"
  namespace: {{ .Values.global.namespace }}
spec:
  selector:
    matchLabels:
      home-idp-component: home-idp-install-manager
  replicas: {{ .Values.installManager.replicas }}
  template:
    metadata:
      labels:
        home-idp-component: home-idp-install-manager
    spec:
      containers:
      - name: home-idp-install-manager
        image: "achoistic98/home-idp-install-manager:{{ .Values.installManager.image.tag }}"
        imagePullPolicy: Always
        ports:
        - containerPort: 5051
          name: port
        volumeMounts:
        - name: home-idp-cm-volume
          mountPath: /etc/home-idp
      volumes:
        - name: home-idp-cm-volume
          configMap:
            name: home-idp-cm
      serviceAccountName: home-idp-install-manager
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: "{{ .Values.global.prefix }}-rbac-manager"
  namespace: {{ .Values.global.namespace }}
spec:
  selector:
    matchLabels:
      home-idp-component: home-idp-rbac-manager
  replicas: {{ .Values.rbacManager.replicas }}
  template:
    metadata:
      labels:
        home-idp-component: home-idp-rbac-manager
    spec:
      containers:
      - name: home-idp-rbac-manager
        image: achoistic98/home-idp-rbac-manager:{{ .Values.rbacManager.image.tag }}
        imagePullPolicy: Always        
        ports:
        - containerPort: 5051
          name: port
        volumeMounts:
        - name: home-idp-cm-volume
          mountPath: /etc/home-idp
      volumes:
        - name: home-idp-cm-volume
          configMap:
            name: home-idp-cm
      serviceAccountName: home-idp-rbac-manager
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ .Values.global.prefix }}-trace-manager
  namespace: {{ .Values.global.namespace }}
spec:
  selector:
    matchLabels:
      home-idp-component: home-idp-trace-manager
  replicas: {{ .Values.traceManager.replicas }}
  template:
    metadata:
      labels:
        home-idp-component: home-idp-trace-manager
    spec:
      containers:
      - name: home-idp-trace-manager
        image: achoistic98/home-idp-trace-manager:{{ .Values.traceManager.image.tag }}
        imagePullPolicy: Always
        ports:
        - containerPort: 5051
          name: port
        volumeMounts:
        - name: home-idp-cm-volume
          mountPath: /etc/home-idp
      volumes:
        - name: home-idp-cm-volume
          configMap:
            name: home-idp-cm
      serviceAccountName: home-idp-trace-manager
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ .Values.global.prefix }}-gateway
  namespace: {{ .Values.global.namespace }}
spec:
  selector:
    matchLabels:
      home-idp-component: home-idp-gateway
  replicas: {{ .Values.gateway.replicas }}
  template:
    metadata:
      labels:
        home-idp-component: home-idp-gateway
    spec:
      containers:
      - name: home-idp-gateway
        image: achoistic98/home-idp-gateway:{{ .Values.gateway.image.tag }}
        imagePullPolicy: Always
        ports:
        - containerPort: 5051
          name: port
        volumeMounts:
        - name: home-idp-cm-volume
          mountPath: /etc/home-idp
      volumes:
        - name: home-idp-cm-volume
          configMap:
            name: home-idp-cm
      serviceAccountName: home-idp-gateway
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ .Values.global.prefix }}-operator
  namespace: {{ .Values.global.namespace }}
spec:
  selector:
    matchLabels:
      home-idp-component: home-idp-operator
  replicas: 1
  template:
    metadata:
      labels:
        home-idp-component: home-idp-operator
    spec:
      containers:
      - name: operator
        image: achoistic98/home-idp-operator:1.0.1
        imagePullPolicy: Always
        ports:
        - containerPort: 8080
          name: port
      serviceAccountName: home-idp-gateway
