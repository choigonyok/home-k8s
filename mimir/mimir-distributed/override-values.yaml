mimir:
  structuredConfig:
    common:
      storage:
        backend: s3
        s3:
          endpoint: minio-svc.minio-system.svc.cluster.local:9000
          insecure: true
          region: ap-northeast-2
          secret_access_key: "mimir"
          access_key_id: <path:home-k8s/data/minio/users/mimir#password>
    blocks_storage:
      s3:
        bucket_name: mimir-blocks
    alertmanager_storage:
      s3:
        bucket_name: mimir-alertmanager
    ruler_storage:
      s3:
        bucket_name: mimir-ruler

alertmanager:
  nodeSelector:
    node-type: worker
  persistentVolume:
    enabled: true
  replicas: 2
  resources:
    limits:
      memory: 512Gi
    requests:
      cpu: 100m
      memory: 128Mi
  statefulSet:
    enabled: true
  containerSecurityContext:
    allowPrivilegeEscalation: true
    readOnlyRootFilesystem: false
    runAsNonRoot: false
    runAsUser: 0

compactor:
  nodeSelector:
    node-type: worker
  persistentVolume:
    size: 20Gi
  resources:
    limits:
      memory: 1.5Gi
    requests:
      cpu: 100m
      memory: 256Mi
  containerSecurityContext:
    allowPrivilegeEscalation: true
    readOnlyRootFilesystem: false
    runAsNonRoot: false
    runAsUser: 0

distributor:
  nodeSelector:
    node-type: worker
  replicas: 2
  resources:
    limits:
      memory: 2Gi
    requests:
      cpu: 500m
      memory: 512Mi

ingester:
  nodeSelector:
    node-type: worker
  containerSecurityContext:
    allowPrivilegeEscalation: true
    readOnlyRootFilesystem: false
    runAsNonRoot: false
    runAsUser: 0
  zoneAwareReplication:
    enabled: false
  persistentVolume:
    size: 50Gi
  replicas: 3
  resources:
    limits:
      memory: 3Gi
    requests:
      cpu: 250m
      memory: 512Mi
  topologySpreadConstraints: {}
  affinity:
    podAntiAffinity:
      requiredDuringSchedulingIgnoredDuringExecution:
        - labelSelector:
            matchExpressions:
              - key: target
                operator: In
                values:
                  - ingester
          topologyKey: 'kubernetes.io/hostname'

        - labelSelector:
            matchExpressions:
              - key: app.kubernetes.io/component
                operator: In
                values:
                  - ingester
          topologyKey: 'kubernetes.io/hostname'

admin-cache:
  nodeSelector:
    node-type: worker
  enabled: true
  replicas: 2

chunks-cache:
  nodeSelector:
    node-type: worker
  enabled: true
  replicas: 2

index-cache:
  nodeSelector:
    node-type: worker
  enabled: true
  replicas: 3

metadata-cache:
  nodeSelector:
    node-type: worker
  enabled: true

results-cache:
  nodeSelector:
    node-type: worker
  enabled: true
  replicas: 2

minio:
  enabled: false

overrides_exporter:
  nodeSelector:
    node-type: worker
  replicas: 1
  resources:
    limits:
      memory: 128Mi
    requests:
      cpu: 100m
      memory: 128Mi

querier:
  nodeSelector:
    node-type: worker
  replicas: 1
  resources:
    limits:
      memory: 1.5Gi
    requests:
      cpu: 250m
      memory: 512Mi

query_frontend:
  nodeSelector:
    node-type: worker
  replicas: 1
  resources:
    limits:
      memory: 2Gi
    requests:
      cpu: 250m
      memory: 512Mi

ruler:
  nodeSelector:
    node-type: worker
  replicas: 1
  resources:
    limits:
      memory: 2.8Gi
    requests:
      cpu: 1
      memory: 2Gi

store_gateway:
  nodeSelector:
    node-type: worker
  containerSecurityContext:
    allowPrivilegeEscalation: true
    readOnlyRootFilesystem: false
    runAsNonRoot: false
    runAsUser: 0

  persistentVolume:
    size: 10Gi
  replicas: 3
  resources:
    limits:
      memory: 2.1Gi
    requests:
      cpu: 1
      memory: 1.5Gi
  topologySpreadConstraints: {}
  affinity:
    podAntiAffinity:
      requiredDuringSchedulingIgnoredDuringExecution:
        - labelSelector:
            matchExpressions:
              - key: target # support for enterprise.legacyLabels
                operator: In
                values:
                  - store-gateway
          topologyKey: 'kubernetes.io/hostname'

        - labelSelector:
            matchExpressions:
              - key: app.kubernetes.io/component
                operator: In
                values:
                  - store-gateway
          topologyKey: 'kubernetes.io/hostname'
  zoneAwareReplication:
    enabled: false

nginx:
  nodeSelector:
    node-type: worker
  replicas: 1
  resources:
    limits:
      memory: 731Mi
    requests:
      cpu: 1
      memory: 512Mi

# Grafana Enterprise Metrics feature related
admin_api:
  nodeSelector:
    node-type: worker
  replicas: 1
  resources:
    limits:
      memory: 128Mi
    requests:
      cpu: 100m
      memory: 64Mi

gateway:
  nodeSelector:
    node-type: worker
  replicas: 1
  resources:
    limits:
      memory: 731Mi
    requests:
      cpu: 1
      memory: 512Mi