mimir:
  structuredConfig:
    common:
      storage:
        backend: s3
        s3:
          endpoint: app-minio-svc.minio-system.svc.cluster.local:9000
          insecure: true
          region: ap-northeast-2
          access_key_id: <path:home-k8s/data/minio/users/root#username>
          secret_access_key: <path:home-k8s/data/minio/users/root#password>
    blocks_storage:
      s3:
        bucket_name: mimir-blocks
    alertmanager_storage:
      s3:
        bucket_name: mimir-alertmanager
    ruler_storage:
      s3:
        bucket_name: mimir-ruler
    limits:
      compactor_blocks_retention_period: 1h
      accept_ha_samples: true
      ha_cluster_label: mimir
      ha_replica_label: __mimir_repl__
    distributor:
      ha_tracker:
        enable_ha_tracker: true
        kvstore:
          store: consul
          consul:
            host: consul-server.ha-system.svc.cluster.local:8500

alertmanager:
  nodeSelector:
    node-type: worker
  persistentVolume:
    enabled: false
  replicas: 2
  resources:
    limits:
      memory: 512Mi
    requests:
      cpu: 100m
      memory: 128Mi
  statefulSet:
    enabled: true
  containerSecurityContext:
    allowPrivilegeEscalation: true
    readOnlyRootFilesystem: false
    runAsNonRoot: false
    runAsUser: 0

compactor:
  nodeSelector:
    node-type: worker
  persistentVolume:
    enabled: false
  resources:
    limits:
      memory: 1Gi
    requests:
      cpu: 100m
      memory: 256Mi
  containerSecurityContext:
    allowPrivilegeEscalation: true
    readOnlyRootFilesystem: false
    runAsNonRoot: false
    runAsUser: 0

distributor:
  nodeSelector:
    node-type: worker
  replicas: 2
  resources:
    limits:
      memory: 1Gi
    requests:
      cpu: 250m
      memory: 256Mi

ingester:
  nodeSelector:
    node-type: worker
  containerSecurityContext:
    allowPrivilegeEscalation: true
    readOnlyRootFilesystem: false
    runAsNonRoot: false
    runAsUser: 0

  zoneAwareReplication:
    enabled: true
    topologyKey: 'kubernetes.io/hostname'
    zones:
    - name: zone-a
      nodeSelector:
        node-number: one
    - name: zone-b
      nodeSelector:
        node-number: two
    - name: zone-c
      nodeSelector:
        node-number: three
  persistentVolume:
    enabled: false
  replicas: 3
  resources:
    limits:
      memory: 2Gi
    requests:
      cpu: 250m
      memory: 512Mi

admin-cache:
  nodeSelector:
    node-type: worker
  enabled: true
  replicas: 2

chunks-cache:
  nodeSelector:
    node-type: worker
  enabled: true
  replicas: 2

index-cache:
  nodeSelector:
    node-type: worker
  enabled: true
  replicas: 3

metadata-cache:
  nodeSelector:
    node-type: worker
  enabled: true

results-cache:
  nodeSelector:
    node-type: worker
  enabled: true
  replicas: 2

minio:
  enabled: false

overrides_exporter:
  nodeSelector:
    node-type: worker
  replicas: 1
  resources:
    limits:
      memory: 128Mi
    requests:
      cpu: 100m
      memory: 128Mi

querier:
  nodeSelector:
    node-type: worker
  replicas: 1
  resources:
    limits:
      memory: 1Gi
    requests:
      cpu: 250m
      memory: 256Mi

query_frontend:
  nodeSelector:
    node-type: worker
  replicas: 1
  resources:
    limits:
      memory: 2Gi
    requests:
      cpu: 250m
      memory: 512Mi

ruler:
  nodeSelector:
    node-type: worker
  replicas: 1
  resources:
    limits:
      memory: 1Gi
    requests:
      cpu: 100m
      memory: 256Mi

store_gateway:
  nodeSelector:
    node-type: worker
  containerSecurityContext:
    allowPrivilegeEscalation: true
    readOnlyRootFilesystem: false
    runAsNonRoot: false
    runAsUser: 0

  persistentVolume:
    enabled: false
  replicas: 3
  resources:
    limits:
      memory: 1Gi
    requests:
      cpu: 100m
      memory: 128Mi

  zoneAwareReplication:
    enabled: true
    topologyKey: 'kubernetes.io/hostname'
    zones:
    - name: zone-a
      nodeSelector:
        node-number: one
    - name: zone-b
      nodeSelector:
        node-number: two
    - name: zone-c
      nodeSelector:
        node-number: three

nginx:
  nodeSelector:
    node-type: worker
  replicas: 1
  resources:
    limits:
      memory: 731Mi
    requests:
      cpu: 100m
      memory: 128Mi

# Grafana Enterprise Metrics feature related
admin_api:
  nodeSelector:
    node-type: worker
  replicas: 1
  resources:
    limits:
      memory: 128Mi
    requests:
      cpu: 100m
      memory: 64Mi

gateway:
  nodeSelector:
    node-type: worker
  replicas: 1
  resources:
    limits:
      memory: 731Mi
    requests:
      cpu: 100m
      memory: 128Mi