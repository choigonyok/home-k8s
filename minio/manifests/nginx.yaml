apiVersion: v1
kind: Pod
metadata:
  name: nginx
  namespace: minio-system
  labels:
    app.kubernetes.io/name: proxy
spec:
  containers:
  - name: nginx
    image: nginx:stable
    ports:
      - containerPort: 80
        name: http-web-svc
    volumeMounts:
    - name: config-volume
      mountPath: /etc/nginx
  volumes:
    - name: config-volume
      configMap:
        name: minio-nginx-config
---
apiVersion: v1
kind: Service
metadata:
  name: minio-nginx
  namespace: minio-system
spec:
  selector:
    app.kubernetes.io/name: proxy
  ports:
  - name: name-of-service-port
    protocol: TCP
    port: 80
    targetPort: http-web-svc
---
apiVersion: v1
kind: ConfigMap
metadata:
  creationTimestamp: 2022-02-18T18:52:05Z
  name: minio-nginx-config
  namespace: minio-system
data:
  nginx.conf: |
    http {
      upstream minio_console {
        server app-minio-console.minio-system.svc.cluster.local:9001;
      }

      server {
        listen       80;
        listen  [::]:80;
        server_name  s3.choigonoyk.com;

        ignore_invalid_headers off;
        client_max_body_size 0;
        proxy_buffering off;
        proxy_request_buffering off;

        location / {
            proxy_set_header Host $http_host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-NginX-Proxy true;

            # This is necessary to pass the correct IP to be hashed
            real_ip_header X-Real-IP;

            proxy_connect_timeout 300;

            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            # proxy_set_header Origin '';

            chunked_transfer_encoding off;

            proxy_pass http://minio_console; # This uses the upstream directive definition to load balance
        }
      }
    }