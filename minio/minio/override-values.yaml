mode: distributed

priorityClassName: ""
runtimeClassName: ""
rootUser: <path:home-k8s/data/minio/users/root#username>
rootPassword: <path:home-k8s/data/minio/users/root#password>

certsPath: "/etc/minio/certs/"
configPathmc: "/etc/minio/mc/"

mountPath: "/export"
bucketRoot: ""

drivesPerNode: 1
replicas: 4
pools: 1

tls:
  enabled: false
  certSecret: ""
  publicCrt: public.crt
  privateKey: private.key

trustedCertsSecret: ""

persistence:
  enabled: true
  annotations: {}
  existingClaim: ""
  storageClass: "ceph-block"
  volumeName: ""
  accessMode: ReadWriteOnce
  size: 250Gi
  subPath: ""

ingress:
  enabled: false

consoleIngress:
  enabled: true
  ingressClassName: cilium
  labels: {}
  annotations:
    ingress.cilium.io/loadbalancer-mode: shared
    ingress.cilium.io/service-type: ClusterIP
  path: /
  hosts:
    - s3.choigonyok.com
  tls: []

nodeSelector: {}
tolerations: []
affinity:
  podAntiAffinity:
    preferredDuringSchedulingIgnoredDuringExecution:
    - weight: 50
      podAffinityTerm:
        labelSelector:
          matchLabels:
            app: minio
        topologyKey: kubernetes.io/hostname
topologySpreadConstraints: []

securityContext:
  enabled: true
  runAsUser: 1000
  runAsGroup: 1000
  fsGroup: 1000
  fsGroupChangePolicy: "OnRootMismatch"
  readOnlyRootFilesystem: false

podAnnotations: {}

podLabels:
  app: minio

resources:
  requests:
    memory: 2Gi

policies: []

users: []
  # - accessKey: mimir
  #   secretKey: <path:home-k8s/data/minio/users/mimir#password>
  #   policy: consoleAdmin
  # - accessKey: velero
  #   secretKey: <path:home-k8s/data/minio/users/velero#password>
  #   policy: consoleAdmin
  # - accessKey: loki
  #   secretKey: <path:home-k8s/data/minio/users/loki#password>
  #   policy: consoleAdmin

svcaccts: []

buckets:
  - name:  mimir-alertmanager
    policy: none
    purge: false
    versioning: true
    objectlocking: false
  - name:  mimir-ruler
    policy: none
    purge: false
    versioning: true
    objectlocking: false
  - name:  mimir-blocks
    policy: none
    purge: false
    versioning: true
    objectlocking: false
  - name:  postgresql
    policy: none
    purge: false
    versioning: true
    objectlocking: false
  - name:  loki-chunks
    policy: none
    purge: false
    versioning: true
    objectlocking: false
  - name:  loki-ruler
    policy: none
    purge: false
    versioning: true
    objectlocking: false
  - name:  loki-admin
    policy: none
    purge: false
    versioning: true
    objectlocking: false

environment:

oidc:
  enabled: true
  configUrl: "https://auth.choigonyok.com/realms/home-k8s/.well-known/openid-configuration"
  clientId: "minio-oauth"
  clientSecret: <path:home-k8s/data/grafana/minio#client_secret>
  existingClientSecretName: ""
  existingClientIdKey: ""
  existingClientSecretKey: ""
  claimName: "email"
  scopes: "openid,profile,email"
  redirectUri: "https://s3.choigonyok.com/oauth_callback"
  claimPrefix: ""
  comment: "test"
  displayName: "test2"

networkPolicy:
  enabled: false

podDisruptionBudget:
  enabled: true
  maxUnavailable: 1

serviceAccount:
  create: true
  name: "minio-sa"

metrics:
  serviceMonitor:
    enabled: true
    includeNode: false
    public: true
    additionalLabels: {}
    annotations: {}
    relabelConfigs: {}
    relabelConfigsCluster: {}
    namespace: ~
    interval: ~
    scrapeTimeout: ~

etcd:
  endpoints: []
  pathPrefix: ""
  corednsPathPrefix: ""
  clientCert: ""
  clientCertKey: ""