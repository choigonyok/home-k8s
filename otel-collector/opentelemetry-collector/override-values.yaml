nameOverride: ""
fullnameOverride: ""

mode: "daemonset"

namespaceOverride: "otel-system"

presets:
  # https://opentelemetry.io/docs/kubernetes/collector/components/#filelog-receiver
  logsCollection:
    enabled: true
    includeCollectorLogs: false
    storeCheckpoints: false
    maxRecombineLogSize: 102400
  hostMetrics:
    enabled: true
  kubernetesAttributes:
    enabled: true
    extractAllPodLabels: true
    extractAllPodAnnotations: true
  kubeletMetrics:
    enabled: true
  kubernetesEvents:
    enabled: false 
  clusterMetrics:
    enabled: false

configMap:
  create: true
  existingName: ""

config:
  exporters:
    otlphttp/metrics:
      endpoint: http://app-alloy-cluster.alloy-system.svc.cluster.local:4318
      tls:
        insecure: true
        insecure_skip_verify: true
    otlphttp/logs:
      endpoint: http://app-alloy-cluster.alloy-system.svc.cluster.local:4318
      tls:
        insecure: true
        insecure_skip_verify: true
    otlp:
      endpoint: http://app-alloy-cluster.alloy-system.svc.cluster.local:4317
      tls:
        insecure: true
        insecure_skip_verify: true
        
  extensions:
    # basicauth/server:
    #   htpasswd: 
    #     file: .htpasswd
    #     inline: |
    #       ${env:BASIC_AUTH_USERNAME}:${env:BASIC_AUTH_PASSWORD}
    basicauth/client:
      client_auth: 
        username: username
        password: password
    health_check:
      endpoint: ${env:MY_POD_IP}:13133

  processors:
    transform:
      metric_statements:
        - context: datapoint
          statements:
          - set(attributes["namespace"], resource.attributes["k8s.namespace.name"])
          - set(attributes["container"], resource.attributes["k8s.container.name"])
          - set(attributes["pod"], resource.attributes["k8s.pod.name"])
          - set(attributes["namespace"], resource.attributes["k8s.namespace.name"])
          - set(attributes["node"], resource.attributes["k8s.node.name"])
          - set(attributes["deployment"], resource.attributes["k8s.deployment.name"])
    
  receivers:
    hostmetrics:
      root_path: /
      collection_interval: 10s
      scrapers:
        cpu:
        load:
        memory:
        disk:
        filesystem:
        network:
      tls:
        insecure: true
        insecure_skip_verify: true
    otlp:
      protocols:
        grpc:
          endpoint: 127.0.0.1:4317
        http:
          endpoint: 127.0.0.1:4318


  service:
    extensions: [basicauth/client, health_check]
    pipelines:
      logs:
        receivers: []
        processors: []
        exporters: [otlphttp/logs]
      # metrics:
      #   receivers: [] # hostmetrics
      #   processors: [transform]
      #   exporters: [otlphttp/metrics]
      # traces:
      #   receivers: [otlp]
      #   processors: []
      #   exporters: [otlp]
    
image:
  repository: "otel/opentelemetry-collector-contrib"
  pullPolicy: IfNotPresent
  tag: ""
  digest: ""
imagePullSecrets: []

command:
  name: ""
  extraArgs: []

serviceAccount:
  create: true
  annotations: {}
  name: "otel-sa"

clusterRole:
  create: true
  annotations: {}
  name: ""
  rules:
  - apiGroups:
    - ''
    resources:
    - 'pods'
    - 'nodes'
    verbs:
    - 'get'
    - 'list'
    - 'watch'

  clusterRoleBinding:
    annotations: {}
    name: ""

podSecurityContext: {}
securityContext:
  allowPrivilegeEscalation: true
  readOnlyRootFilesystem: false
  runAsNonRoot: false
  runAsUser: 0
  # capabilities:
  #   add:
  #     - SYS_PTRACE
  #     - SYS_ADMIN

nodeSelector: {}
tolerations: []
affinity: {}
topologySpreadConstraints: []

priorityClassName: ""

extraEnvs:
  - name: K8S_NODE_IP
    valueFrom:
      fieldRef:
        fieldPath: status.hostIP
extraEnvsFrom: []
extraVolumes: []
extraVolumeMounts: []

ports:
  otlp:
    enabled: true
    containerPort: 4317
    servicePort: 4317
    hostPort: 4317
    protocol: TCP
    # nodePort: 30317
    appProtocol: grpc
  otlp-http:
    enabled: true
    containerPort: 4318
    servicePort: 4318
    hostPort: 4318
    protocol: TCP
  jaeger-compact:
    enabled: true
    containerPort: 6831
    servicePort: 6831
    hostPort: 6831
    protocol: UDP
  jaeger-thrift:
    enabled: true
    containerPort: 14268
    servicePort: 14268
    hostPort: 14268
    protocol: TCP
  jaeger-grpc:
    enabled: true
    containerPort: 14250
    servicePort: 14250
    hostPort: 14250
    protocol: TCP
  zipkin:
    enabled: true
    containerPort: 9411
    servicePort: 9411
    hostPort: 9411
    protocol: TCP
  metrics:
    enabled: true
    containerPort: 8888
    servicePort: 8888
    protocol: TCP

resources:
  limits:
    cpu: 250m
    memory: 512Mi

podAnnotations: {}
podLabels: {}
additionalLabels: {}
hostNetwork: false
hostAliases: []
dnsPolicy: ""
dnsConfig: {}

# only used with deployment mode
replicaCount: 1
revisionHistoryLimit: 3

annotations: {}
extraContainers: []

initContainers: []

lifecycleHooks: {}
livenessProbe:
  httpGet:
    port: 13133
    path: /

readinessProbe:
  httpGet:
    port: 13133
    path: /

service:
  enabled: true
  type: ClusterIP
  externalTrafficPolicy: Cluster
  annotations: {}

ingress:
  enabled: false
  annotations: {}
  ingressClassName: ""
  hosts:
    - host: example.com
      paths:
        - path: /
          pathType: Prefix
          port: 4318

  additionalIngresses: []

podMonitor:
  enabled: true
  metricsEndpoints:
    - port: metrics
      interval: 10s

  extraLabels: {}

serviceMonitor:
  enabled: true
  metricsEndpoints:
    - port: metrics
      interval: 10s

  extraLabels: {}

podDisruptionBudget:
  enabled: true
  minAvailable: 1

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 10
  behavior: {}
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

rollout:
  rollingUpdate: {}
  strategy: RollingUpdate

prometheusRule:
  enabled: false
  groups: []
  defaultRules:
    enabled: false
  extraLabels: {}

statefulset:
  volumeClaimTemplates: []
  podManagementPolicy: "Parallel"
  persistentVolumeClaimRetentionPolicy:
    enabled: false
    whenDeleted: Retain
    whenScaled: Retain

networkPolicy:
  enabled: false
  annotations: {}
  allowIngressFrom: []
  extraIngressRules: []
  egressRules: []

useGOMEMLIMIT: true
shareProcessNamespace: false

