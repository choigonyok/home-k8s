apiVersion: ceph.rook.io/v1
kind: CephCluster
metadata:
  name: rook-ceph
  namespace: rook-ceph
spec:
  cephVersion:
    image: quay.io/ceph/ceph:v18.2.2
    allowUnsupported: false
  dataDirHostPath: /var/lib/rook
  skipUpgradeChecks: false
  continueUpgradeAfterChecksEvenIfNotHealthy: false
  waitTimeoutForHealthyOSDInMinutes: 10
  upgradeOSDRequiresHealthyPGs: false
  mon:
    count: 3
    allowMultiplePerNode: false
  mgr:
    count: 2
    allowMultiplePerNode: false
    modules:
      - name: rook
        enabled: true
  dashboard:
    enabled: true
    ssl: false
  
  labels:
    mon:
      rookceph: mon
    osd:
      rookceph: osd
    mgr:
      rookceph: mgr
    # crashcollector:

  placement:
    mon:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchExpressions:
            - key: node-type
              operator: In
              values:
              - worker
    mgr:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchExpressions:
            - key: node-type
              operator: In
              values:
              - worker
    osd:
      podAntiAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
        - labelSelector:
            matchExpressions:
            - key: rookceph
              operator: In
              values:
              - osd
          topologyKey: "kubernetes.io/hostname"
  monitoring:
    enabled: false
    metricsDisabled: false

  network:
    connections:
      encryption:
        enabled: false
      compression:
        enabled: false
      requireMsgr2: false

  crashCollector:
    disable: false
    daysToRetain: 14

  logCollector:
    enabled: true
    periodicity: daily # one of: hourly, daily, weekly, monthly
    maxLogSize: 500M # SUFFIX may be 'M' or 'G'. Must be at least 1M.

  cleanupPolicy:
    confirmation: ""
    sanitizeDisks:
      method: complete
      dataSource: zero
      iteration: 1
    allowUninstallWithVolumes: false

  annotations:
  labels:
  resources:
    mgr:
      limits:
        memory: "1024Mi"
      requests:
        cpu: "500m"
        memory: "1024Mi"
    mon:
      limits:
        memory: "2048Mi"
      requests:
        cpu: "1000m"
        memory: "1024Mi"
    osd:
      limits:
        memory: "4096Mi"
      requests:
        cpu: "500m"
        memory: "1024Mi"

  removeOSDsIfOutAndSafeToRemove: false
  priorityClassNames:
    mon: system-node-critical
    osd: system-node-critical
    mgr: system-cluster-critical
  storage:
    useAllNodes: true
    useAllDevices: false
    deviceFilter: ^nvme
    config:
      osdsPerDevice: "1"
    onlyApplyOSDPlacement: false
  disruptionManagement:
    managePodBudgets: true
    osdMaintenanceTimeout: 30
    pgHealthCheckTimeout: 0

  csi:
    readAffinity:
      enabled: false

    cephfs:

  healthCheck:
    daemonHealth:
      mon:
        disabled: false
        interval: 45s
      osd:
        disabled: false
        interval: 60s
      status:
        disabled: false
        interval: 60s
    livenessProbe:
      mon:
        disabled: false
      mgr:
        disabled: false
      osd:
        disabled: false
    startupProbe:
      mon:
        disabled: false
      mgr:
        disabled: false
      osd:
        disabled: false

## Force reset disk
umount /dev/nvme0n1
ssgdisk --zap-all /dev/nvme0n1
dd if=/dev/zero of="/dev/nvme0n1" bs=1M count=100 oflag=direct,dsync
blkdiscard /dev/nvme0n1
partprobe /dev/nvme0n1

ls /dev/mapper/ceph-* | xargs -I% -- dmsetup remove %

rm -rf /dev/ceph-*
rm -rf /dev/mapper/ceph--*