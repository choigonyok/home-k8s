global:
  enabled: true
  namespace: "vault-system"
  serverTelemetry:
    prometheusOperator: true

injector:
  enabled: false

server:
  enabled: true

  updateStrategyType: "OnDelete"
  logLevel: "info"
  logFormat: "standard"

  resources:
    requests:
      memory: 256Mi
      cpu: 100m
    limits:
      memory: 1024Mi
      cpu: 500m

  ingress:
    enabled: true
    labels:
    annotations:
      ingress.cilium.io/loadbalancer-mode: shared
      ingress.cilium.io/service-type: ClusterIP

    ingressClassName: "cilium"
    pathType: Prefix
    activeService: true
    hosts:
      - host: vault.choigonyok.com
        paths: ["/"]
    extraPaths: []
    tls:
    - secretName: vault-crt
      hosts:
        - vault.choigonyok.com

  # https://developer.hashicorp.com/vault/docs/auth/kubernetes
  authDelegator:
    enabled: true

  extraVolumes:
    - type: configMap
      name: vault-policy
      path: /vault/policies

  nodeSelector:
    node-type: worker



  service:
    enabled: true
    active:
      enabled: true
      annotations: {}
    standby:
      enabled: true
      annotations: {}
    # If enabled, the service selectors will include `app.kubernetes.io/instance: {{ .Release.Name }}`
    # When disabled, services may select Vault pods not deployed from the chart.
    # Does not affect the headless vault-internal service with `ClusterIP: None`
    instanceSelector:
      enabled: true
    # clusterIP: None # for headless service
    # type: ClusterIP

    activeNodePort: 30001
    standbyNodePort: 30002

  dataStorage:
    enabled: true
    # Size of the PVC created
    size: 10Gi
    mountPath: "/vault/data"
    storageClass: ceph-fs
    accessMode: ReadWriteOnce
    annotations: {}
    labels: {}

  persistentVolumeClaimRetentionPolicy:
    whenDeleted: Retain
    whenScaled: Retain

  auditStorage:
    enabled: true
    size: 10Gi
    mountPath: "/vault/audit"
    storageClass: ceph-fs
    accessMode: ReadWriteOnce
    annotations: {}
    labels: {}

  dev:
    enabled: false
    config: ""

  ha:
    enabled: true
    replicas: 3

    apiAddr:
    clusterAddr:
    raft:
      enabled: true
      setNodeId: true
      config: |
        ui = true

        listener "tcp" {
          tls_disable = 1
          tls_disable_client_certs = true
          address = "[::]:8200"
          cluster_address = "[::]:8201"
          # Enable unauthenticated metrics access (necessary for Prometheus Operator)
          telemetry {
            unauthenticated_metrics_access = "true"
          }
        }

        storage "raft" {
          path = "/vault/data"
          retry_join {
            leader_api_addr = "http://vault-0.vault-internal:8200"
            leader_ca_cert_file = ""
            leader_client_cert_file = ""
            leader_client_key_file = ""
          }
          retry_join {
            leader_api_addr = "http://vault-1.vault-internal:8200"
            leader_ca_cert_file = ""
            leader_client_cert_file = ""
            leader_client_key_file = ""
          }
          retry_join {
            leader_api_addr = "http://vault-2.vault-internal:8200"
            leader_ca_cert_file = ""
            leader_client_cert_file = ""
            leader_client_key_file = ""
          }
        }

        service_registration "kubernetes" {}

    config: ""

    disruptionBudget:
      enabled: true
      maxUnavailable: 2

  serviceAccount:
    create: true
    name: "vault-sa"
    createSecret: true
    annotations: {}
    extraLabels: {}
    serviceDiscovery:
      enabled: true

ui:
  enabled: true
  publishNotReadyAddresses: true
  activeVaultPodOnly: false
  serviceType: "ClusterIP"
  serviceNodePort: null
  externalPort: 8200
  targetPort: 8200

  serviceIPFamilyPolicy: ""
  serviceIPFamilies: []
  externalTrafficPolicy: Cluster
  annotations: {}

csi:
  enabled: false

# https://developer.hashicorp.com/vault/docs/configuration/telemetry
# https://developer.hashicorp.com/vault/docs/internals/telemetry
serverTelemetry:
  serviceMonitor:
    enabled: true
    selectors: {}
    interval: 10s
    scrapeTimeout: 10s

  prometheusRules:
      # The Prometheus operator *must* be installed before enabling this feature,
      # if not the chart will fail to install due to missing CustomResourceDefinitions
      # provided by the operator.

      # Deploy the PrometheusRule custom resource for AlertManager based alerts.
      # Requires that AlertManager is properly deployed.
      enabled: false

      # Selector labels to add to the PrometheusRules.
      # When empty, defaults to:
      #  release: prometheus
      selectors: {}

      # Some example rules.
      rules: []
      #  - alert: vault-HighResponseTime
      #    annotations:
      #      message: The response time of Vault is over 500ms on average over the last 5 minutes.
      #    expr: vault_core_handle_request{quantile="0.5", namespace="mynamespace"} > 500
      #    for: 5m
      #    labels:
      #      severity: warning
      #  - alert: vault-HighResponseTime
      #    annotations:
      #      message: The response time of Vault is over 1s on average over the last 5 minutes.
      #    expr: vault_core_handle_request{quantile="0.5", namespace="mynamespace"} > 1000
      #    for: 5m
      #    labels:
      #      severity: critical

